# Use a minimal Node.js image
FROM node:18-slim AS deps

# Use corepack without additional preparation if possible
RUN corepack enable

WORKDIR /usr/src/app

COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile --prod

# Build stage
FROM node:18-alpine AS prod

RUN corepack enable
WORKDIR /usr/src/app

COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile
RUN npm cache clean --force

COPY src/ ./src/
COPY tsconfig*.json ./
COPY nest-cli.json ./

RUN pnpm run build

# Production stage - Use node:18-alpine
FROM node:18-alpine AS runner

# Install curl for healthcheck
RUN apk add --no-cache curl

WORKDIR /usr/src/app

# Copy only the absolute minimum
COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY --from=prod /usr/src/app/dist ./dist
COPY package.json ./

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001
USER nestjs

CMD ["node", "dist/main"]