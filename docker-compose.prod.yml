version: '3.8'

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  nginx-cache:
  nginx-logs:

services:
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NestJS Backend
  nestjs-prod:
    container_name: nestjs-prod-app
    image: nestjs-prod:latest
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: runner
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3001}
      - REDIS_URL=redis://redis:6379
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:${PORT:-3001}/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    container_name: nginx-proxy
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - nginx-cache:/var/cache/nginx
      - nginx-logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      nestjs-prod:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/nginx-health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
